<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="flowLayoutPanel2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>